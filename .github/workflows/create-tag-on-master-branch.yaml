name: Create tag on master branch
on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - 'master'
      - 'main'
      - 'feature/*'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
env:
  REGISTRY: docker.io
  USERNAME: ${{ secrets.DOCKER_USERNAME }}
  PACKAGE: users-microservice
jobs:
  build:
    name: Build maven project
#    if: endsWith(github.event.base_ref, 'main') == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify -DskipTests
      - run: mkdir staging && cp web/target/*.jar staging
      - run: cp deployment/Dockerfile staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging
  create-docker-image:
    name: Create docker image and push to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Package
      - name: Login to container repository
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.PACKAGE }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
            type=semver,pattern={{major}},value=${{ inputs.version }}
            type=ref,event=branch,suffix=-{{ sha }}
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=true
      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [create-docker-image]
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v4
        with:
          namespace: default
          manifests: |
            manifests/deployment.yaml
          images: |
            ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.PACKAGE }}:${{ github.sha }}