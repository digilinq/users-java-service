name: Build Maven Project

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
env:
  REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
  USERNAME: ${{ vars.DOCKER_HUB_USERNAME }}
  PACKAGE: ${{ vars.PACKAGE_NAME }}

jobs:
  config:
    uses: digilinq/reusable-workflows/.github/workflows/project-configuration.yaml@v5

  build:
    name: build
    needs:
      - config
    uses: digilinq/reusable-workflows/.github/workflows/build-maven-project.yaml@v5
    with:
      runner: ${{ needs.config.outputs.github-runner }}
      ref: ${{ github.ref }}
      java-version: ${{ needs.config.outputs.java-version }}
      maven-version: ${{ needs.config.outputs.maven-version }}
      artifact-name: 'Package'
      artifact-path: 'web/target/*.jar'
      docker-file: 'deployment/Dockerfile'

  docker-container-registry:
    name: image-specifications
    uses: digilinq/reusable-workflows/.github/workflows/docker-image-specifications.yaml@v5
    with:
      registry: ${{ vars.CONTAINER_REGISTRY }}
      namespace: ${{ vars.DOCKER_HUB_USERNAME }}
      repository: ${{ vars.PACKAGE_NAME }}

  create-docker-image:
    name: Create docker image
    needs:
      - config
      - build
      - docker-container-registry
    uses: digilinq/reusable-workflows/.github/workflows/create-docker-image.yaml@v5
    with:
      runner: ${{ needs.config.outputs.github-runner }}
      artifact-name: 'Package'
      docker-image: ${{ needs.docker-container-registry.outputs.docker }}
    secrets:
      container-registry-password: ${{ secrets.DOCKER_HUB_PASSWORD }}

  eval:
    name: Evaluate
    needs:
      - config
    runs-on: ${{ needs.config.outputs.github-runner }}
    steps:
      - name: Evaluate
        run: |
          echo "Namespace: ${{ needs.config.outputs.deployment-namespace }}"

  deploy:
    name: Deploy
    needs:
      - config
      - create-docker-image
    uses: digilinq/reusable-workflows/.github/workflows/kubernetes-deploy.yaml@v5
    with:
      runner: ${{ needs.config.outputs.github-runner }}
      ref: ${{ github.ref }}
      image: ${{ needs.create-docker-image.outputs.docker-image }}
      namespace: ${{ needs.config.outputs.deployment-namespace }}
      manifests: |
        manifests/deployment.yml
        manifests/service.yaml
    secrets:
      kubernetes-url: ${{ secrets.KUBERNETES_URL }}
      kubernetes-secret: ${{ secrets.KUBERNETES_SECRET }}
