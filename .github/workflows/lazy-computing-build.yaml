name: Build Maven Project

on:
  push:
    branches:
      - '*'
      - '*/*'
env:
  REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
  USERNAME: ${{ vars.DOCKER_HUB_USERNAME }}
  PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  PACKAGE: ${{ vars.PACKAGE_NAME }}
jobs:
  build:
    name: Build maven project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven
      - name: Build maven project with no integration tests
        run: mvn --batch-mode --update-snapshots package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Copy artifact and docker file
        run: | 
          mkdir staging && cp web/target/*.jar staging
          cp deployment/Dockerfile staging
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging
  create-docker-image:
    name: Create docker image
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Package
      - name: Print event name
        run: echo "The event name is ${{ github.event_name }}"
      - name: Login to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.PACKAGE }}
          tags: |
#            type=semver,pattern={{version}},value=${{ inputs.version }}
#            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
#            type=semver,pattern={{major}},value=${{ inputs.version }}
#            type=ref,event=branch,suffix=-{{ sha }}
            type=ref,event=pr
#            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=true
